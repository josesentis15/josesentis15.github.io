{"version":3,"sources":["webpack:///./src/components/projectsList/styles.js","webpack:///./src/components/projectsList/index.js","webpack:///./src/components/project/styles.js","webpack:///./src/components/project/index.js","webpack:///./src/pages/projects.js"],"names":["ProjectListStyled","styled","div","space","props","background","ProjectList","children","ProjectStyled","colors","white","base300","media","min","Project","project","hover","abstract","onMouseOver","onMouseOut","external","externalLink","slug","order","title","className","toString","length","to","Projects","state","e","setState","currentTarget","classList","add","remove","render","data","this","projects","allContentfulProject","edges","site","siteMetadata","sections","location","map","node","key","id","React","Component","pageQuery"],"mappings":"iKAIMA,EAAoBC,IAAOC,IAAV,gFAAGD,CAAH,oBACPE,YAAM,IAqEPH,GAlEKC,IAAOC,IAAV,0EAAGD,CAAH,0ZACS,SAAAG,GAAK,OAAIA,EAAMC,cAiE1BL,GChEAM,EANK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAClB,kBAAC,EAAD,KACGA,I,wUCAL,IAkDeC,EAlDOP,IAAOC,IAAV,4EAAGD,CAAH,iSACHE,YAAM,GACXM,IAAOC,MACCP,YAAM,GACPA,YAAM,KAGXM,IAAOE,QAGPF,IAAOC,MAKCP,aAAO,KACNA,YAAM,KAMLA,YAAM,GAczBS,IAAMC,IAAI,SAAVD,CApCe,IAqCET,YAAM,GAGXA,YAAM,IAKFA,YAAM,KCZXW,EA5BC,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,MAClBC,GADuD,EAA9BC,YAA8B,EAAjBC,WACYJ,EAAlDE,UAAUG,EAAwCL,EAAxCK,SAAUC,EAA8BN,EAA9BM,aAAcC,EAAgBP,EAAhBO,KAAMC,EAAUR,EAAVQ,MAC1CC,EAAQT,EAAQS,OAAST,EAAQO,KACjCG,EAAS,YAAcT,EAAQ,WAAa,IAElD,OACE,kBAAC,EAAD,CACES,UAAWA,GAIX,wBAAIA,UAAU,yBACZ,0BAAMA,UAAU,SACe,IAA5BF,EAAMG,WAAWC,OAAe,IAAM,GACtCJ,EAFH,KAICC,GAEH,uBAAGC,UAAU,iBAAiBR,EAASA,UACtCG,EACC,kBAAC,IAAD,CAAcQ,GAAIP,GAAlB,cAEA,kBAAC,IAAD,CAAMO,GAAIN,GAAV,kB,0DCzBFO,E,4JACJC,MAAQ,CACNd,OAAO,G,EAGTE,YAAc,SAAAa,GACZ,EAAKC,SAAS,CAAEhB,OAAO,IACvBe,EAAEE,cAAcC,UAAUC,IAAI,U,EAGhChB,WAAa,SAAAY,GACX,EAAKC,SAAS,CAAEhB,OAAO,IACvBe,EAAEE,cAAcC,UAAUE,OAAO,U,4GAGnCC,OAAA,WAAU,IAAD,OACCC,EAASC,KAAKnC,MAAdkC,KACAtB,EAAUuB,KAAKT,MAAfd,MACFwB,EAAWF,EAAKG,qBAAqBC,MACrClB,EAAQc,EAAKK,KAAKC,aAAaC,SAASL,SAE9C,OACE,kBAAC,IAAD,CAAQM,SAAUP,KAAKnC,MAAM0C,SAAUtB,MAAM,WAAWC,UAAU,QAChE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,wBAAIA,UAAU,SAASD,KAG3B,kBAAC,IAAD,CAASC,UAAU,WACjB,kBAAC,EAAD,KACGe,EAASO,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACZ,kBAAC,EAAD,CACEC,IAAKD,EAAKE,GACVnC,QAASiC,EACThC,MAAOA,EACPE,YAAa,EAAKA,YAClBC,WAAY,EAAKA,oB,GApCVgC,IAAMC,WAgDhBC,GAFExB,YAEO","file":"component---src-pages-projects-js-be8cc41f1ea6544f5495.js","sourcesContent":["import styled from 'styled-components';\n\nimport { space } from '../../utils/mixins';\n\nconst ProjectListStyled = styled.div`\n  margin-top: ${space(4)};\n`;\n\nconst ImageStyled = styled.div`\n  background-image: url(${props => props.background});\n  background-position: center;\n  background-size: cover;\n  bottom: 0;\n  left: 0;\n  margin: 0 auto;\n  position: absolute;\n  overflow: hidden;\n  right: 0;\n  top: 0;\n  /* transform: scale3d(1.1, 1.1, 1); */\n  /* transition: transform .9s cubic-bezier($curve-Bezier); */\n  /* will-change: transform; */\n\n  &::before {\n    content: '';\n    display: block;\n    width: 100%;\n  }\n\n  /* &::after {\n        background-color: $c-neutro900;\n        content: '';\n        height: 100%;\n        left: 0;\n        opacity: 1;\n        position: absolute;\n        top: 0;\n        transition: opacity .9s cubic-bezier($curve-Bezier);\n        width: 100%;\n        will-change: opacity;\n        z-index: 1;\n    } */\n\n  &.square {\n    position: relative;\n\n    &::before {\n      padding-top: (4 / 3) * 100%;\n    }\n  }\n\n  &.landscape {\n    position: relative;\n\n    &::before {\n      padding-top: (9 / 16) * 100%;\n    }\n  }\n\n  &.portrait {\n    position: relative;\n\n    &::before {\n      padding-top: (3 / 2) * 100%;\n    }\n  }\n  /*\n    &.lazyloaded {\n        transform: scale3d(1, 1, 1);\n\n        &::after { opacity: 0; }\n    } */\n`;\n\nexport default ProjectListStyled;\nexport { ImageStyled };\n","import React from 'react';\n\nimport ProjectListStyled from './styles';\n\nconst ProjectList = ({ children }) => (\n  <ProjectListStyled>\n    {children}\n  </ProjectListStyled>\n);\n\nexport default ProjectList;\n","import styled from 'styled-components';\n\nimport { media } from '../../utils/media-queries';\nimport { space } from '../../utils/mixins';\nimport { colors } from '../../utils/settings';\n\nconst ProjectStyled = styled.div`\n  margin-top: ${space(4)};\n  color: ${colors.white};\n  margin-bottom: ${space(3)};\n  padding-left: ${space(1.5)};\n\n  &.no-hover {\n    color: ${colors.base300};\n  }\n  &.hover {\n    color: ${colors.white};\n  }\n\n  .project {\n    &__title {\n      margin-left: ${space(-1.5)};\n      padding-left: ${space(1.5)};\n      position: relative;\n    }\n\n    &__title,\n    &__text {\n      margin-bottom: ${space(2)};\n    }\n  }\n\n  a {\n    text-decoration: underline;\n  }\n\n  .label {\n    left: 0;\n    position: absolute;\n    bottom: 2px;\n  }\n\n  ${media.min('tablet')`\n    margin-bottom: ${space(4)};\n\n    .label {\n      bottom: ${space(0.3)};\n    }\n\n    .project__text {\n      column-count: 2;\n      column-gap: ${space(2)};\n    }\n  `}\n`;\n\nexport default ProjectStyled;\n","import React from 'react';\nimport { Link } from 'gatsby';\n// import Img from 'gatsby-image';\n\nimport ExternalLink from '../../components/externalLink';\n\nimport ProjectStyled from './styles';\n\n// const showProject = () => {};\n// const hideProject = () => {};\n\nconst Project = ({ project, hover, onMouseOver, onMouseOut }) => {\n  const { abstract, external, externalLink, slug, order } = project;\n  const title = project.title || project.slug;\n  const className = `project ${hover ? 'no-hover' : ''}`;\n\n  return (\n    <ProjectStyled\n      className={className}\n      // onMouseEnter={e => onMouseOver(e)}\n      // onMouseLeave={e => onMouseOut(e)}\n    >\n      <h2 className=\"project__title title2\">\n        <span className=\"label\">\n          {order.toString().length === 1 ? '0' : ''}\n          {order}.\n        </span>\n        {title}\n      </h2>\n      <p className=\"project__text\">{abstract.abstract}</p>\n      {external ? (\n        <ExternalLink to={externalLink}>Go to site</ExternalLink>\n      ) : (\n        <Link to={slug}>View project</Link>\n      )}\n    </ProjectStyled>\n  );\n};\n\nexport default Project;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout, { Wrapper } from '../components/layout';\nimport ProjectList from '../components/projectsList';\nimport Project from '../components/project';\nimport Navigation from '../styles/navigation';\n\nclass Projects extends React.Component {\n  state = {\n    hover: false,\n  };\n\n  onMouseOver = e => {\n    this.setState({ hover: false });\n    e.currentTarget.classList.add('hover');\n  };\n\n  onMouseOut = e => {\n    this.setState({ hover: false });\n    e.currentTarget.classList.remove('hover');\n  };\n\n  render() {\n    const { data } = this.props;\n    const { hover } = this.state;\n    const projects = data.allContentfulProject.edges;\n    const title = data.site.siteMetadata.sections.projects;\n\n    return (\n      <Layout location={this.props.location} title=\"Projects\" className=\"dark\">\n        <Wrapper>\n          <Navigation>\n            <h1 className=\"title\">{title}</h1>\n          </Navigation>\n        </Wrapper>\n        <Wrapper className=\"reading\">\n          <ProjectList>\n            {projects.map(({ node }) => (\n              <Project\n                key={node.id}\n                project={node}\n                hover={hover}\n                onMouseOver={this.onMouseOver}\n                onMouseOut={this.onMouseOut}\n              />\n            ))}\n          </ProjectList>\n        </Wrapper>\n      </Layout>\n    );\n  }\n}\n\nexport default Projects;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        sections {\n          projects\n        }\n      }\n    }\n    allContentfulProject(sort: { fields: order }) {\n      edges {\n        node {\n          title\n          external\n          externalLink\n          slug\n          image {\n            fluid {\n              ...GatsbyContentfulFluid\n            }\n          }\n          id\n          order\n          abstract {\n            abstract\n          }\n        }\n      }\n    }\n  }\n`;\n\n//       <PostImage>\n//         <Img fluid={node.image.fluid} />\n//       </PostImage>\n"],"sourceRoot":""}